class Solution {
public:
    int par[209];
    int find(int x){
        if(par[x] == x)return x;
        else return par[x] = find(par[x]);
    }
    void unionFind(int a, int b){
        a = find(a);
        b = find(b);
        if(a==b)return;
        par[a] = b;
       
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        for(int i=0;i<=n;i++){
            par[i] = i; 
        }   
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j]){
                    unionFind(i+1,j+1);
                }
            }
        }
        int ans=0;
        for(int i=1;i<=n;i++){
           
            if(par[i] == i)ans++;
        }
        return ans;
    }
};
/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL)return head;
    Node *h1=NULL,*tail=head,*t1=NULL;
	while(tail){
		Node *temp=new Node(tail->val);
		temp->next=tail->next;
		tail->next=temp;
		tail=temp->next;
	}       
	tail=head;
	t1=head->next;
	h1=head->next;
	while(tail){
		if(tail->random!=NULL){
			t1->random=tail->random->next;
		}
		tail=t1->next;
		if(tail)
		t1=tail->next;
	}
	t1=head->next,tail=head;
	while(tail && t1){
		tail->next=(tail->next)?tail->next->next:tail->next;
                tail=tail->next;
		t1->next=(t1->next)?t1->next->next:t1->next;
		t1=t1->next;
	}
	return h1;
    }    
};
class Solution {
public:
    int x[4]={0,0,-1,1};
    int y[4]={1,-1,0,0};
    void dfs(vector<vector<char>>& board,vector<vector<bool>>& visited,int i,int j,int n,int m)
    {   cout<<i<<" "<<j<<"\n";
        visited[i][j]=true;
        board[i][j]='A';
        for(int k=0;k<4;k++){
            int a=i+x[k];
            int b=j+y[k];
             if(a>=n || a<0 || b>=m ||b<0)continue;
            if(board[a][b]=='O' || board[a][b]=='A' && !visited[a][b])
            {
                board[a][b]='A';
               
                dfs(board,visited,a,b,n,m);
            }
        }
    }
    void solve(vector<vector<char>>& board) {
        int n=board.size();
        if(n==0)return;
        int m=board[0].size();
        vector<vector<bool>>visited(n,vector<bool>(m,false));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if((i==0 || j==0|| i==n-1 || j==m-1) && board[i][j]=='O')
                    dfs(board,visited,i,j,n,m);
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(board[i][j]=='A')board[i][j]='O';
                else board[i][j]='X';
            }
        }
    }
};
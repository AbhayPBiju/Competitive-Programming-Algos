class Solution {
public:
    int x[8]={-1,-1,-1,1,1,1,0,0};
    int y[8]={1,0,-1,-1,1,0,-1,1};
    void dfs(vector<vector<int>>& board, int i ,int j){
        int c=0,n=board.size(),m=board[0].size();
        for(int k=0;k<8;k++){
            int a=x[k]+i;
            int b=y[k]+j;
            
            if(a>=n || a<0 || b>=m|| b<0)continue;
            if(a==i && b==j)continue;
            if(board[a][b]==1 || board[a][b]==-1)c++;
        }
       
        if(board[i][j]==1){
            if(c<2 || c>3)board[i][j]=-1;
            
        }
        else{
            if(c==3)board[i][j]=2;
        }
    }
    void gameOfLife(vector<vector<int>>& board) {
        int n=board.size();
        if(n==0)return ;
        int m=board[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                dfs(board,i,j);
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==-1)board[i][j]=0;
                if(board[i][j]==2)board[i][j]=1;
            }
        }
    }
};
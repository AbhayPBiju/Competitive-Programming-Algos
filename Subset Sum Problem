#include <bits/stdc++.h>
using namespace std;

class Solution{
public:

    int dp[1001][1001]; 
    int findAns(int N, int arr[], int s){
        if(N==-1){
            if(s==0){
                return 1; 
            }
            return 0; 
        }
        if(s<0){
            return 0; 
        }
        if(s==0){
            return 1; 
        }
        if(dp[N][s] != -1){
            return dp[N][s]; 
        }

        return dp[N][s]= findAns(N-1, arr, s-arr[N]) || findAns(N-1, arr, s) ; 
        
    }
    int equalPartition(int N, int arr[])
    {
        //find sum
        memset(dp, -1, sizeof(dp)); 
        int sum=0; 
        for(int i=0;i<N;i++){
            sum+=arr[i]; 
        }
        if(sum%2 != 0){
            return 0; 
        }
        return findAns(N-1, arr, sum/2);
    }
};

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        if(ob.equalPartition(N, arr))
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
    return 0;
}
